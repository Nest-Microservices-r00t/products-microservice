################# Dependencias #################
FROM node:21-alpine3.20 as deps

WORKDIR /usr/src/app

COPY package.json ./
COPY package-lock.json ./

RUN npm install



########### Builder - Construye la aplicacion ####################
FROM node:21-alpine3.20 as build

WORKDIR /usr/src/app

# COPY --from=stageName source  dest 
COPY --from=deps /usr/src/app/node_modules ./node_modules

#se copia todo el codigo fuente de la aplicaci√≥n
COPY . .

# RUN npm run test  - correr test automaticos
RUN npm run build

# limpiamos dependencias de desarrollo y cache - para optimizar peso de la imagen
RUN npm ci -f --only=production && npm cache clean --force 

RUN npx prisma generate

################### Crear la imagen final de docker ################
FROM node:21-alpine3.20 as prod

WORKDIR /usr/src/app

COPY --from=build /usr/src/app/node_modules ./node_modules

COPY --from=build /usr/src/app/dist ./dist
COPY --from=build /usr/src/app/prisma ./prisma

ENV NODE_ENV=production

USER node

EXPOSE 3000

CMD [ "node", "dist/main.js" ]